name: Python package

on: [push]

jobs:
  build_wheels:
  
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        # python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.11"]

    environment: play-min-io

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        ref: ${{ github.ref }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check package
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install check-manifest flake8
        check-manifest
        flake8 .
    - name: Install dependencies
      run: |
        python -c "import configparser; c = configparser.ConfigParser(); c.read('setup.cfg'); print(c['options']['install_requires'])" > requirements.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run package creation
      run: |
        python -m pip install --user --upgrade build
        python -m build
    - name: Run Unit Tests and generate coverage report
      env:
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        MINIO_HOST: ${{ vars.MINIO_HOST }}
        MINIO_BUCKET: ${{ vars.MINIO_BUCKET }}
      run: |
        echo "MINIO_HOST $MINIO_HOST"
        pip install coverage
        coverage run -m unittest discover
        coverage report -m
        coverage xml
        coverage html
    - name: File list
      run: |
        ls -lR
    - name: Upload debug.log as artifact
      uses: actions/upload-artifact@v4
      with:
        name: debug
        path: debug.log
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        fail_ci_if_error: true
        flags: unittests
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: erling6232/imagedata_transport_s3
    - name: Archive code coverage html report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: htmlcov
    #- name: Archive package
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: imagedata
    #    path: src/dist

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel
          pip install imagedata

      - name: Build sdist
        run: pipx run build --sdist

      - name: File list
        run: |
          pwd
          ls -lR

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz


  pypi-publish:
    name: upload release to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # Specifying a GitHub environment is optional, but strongly encouraged
    environment: pypi
    permissions:
      contents: read
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
